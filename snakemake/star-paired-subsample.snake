from os import path
import pandas as pd

def get_samples(sample_def_path):
    sample_def = pd.read_csv(sample_def_path, sep='\t')
    names = [n.split('.')[0] for n in sample_def['name']]
    return list(set(names))

def get_fastq_path(sample_def_path, sample, pair, base_dir='fastq'):
    sample_def = pd.read_csv(sample_def_path, sep='\t', index_col=0)
    file_name = sample_def.ix['{}.{}'.format(sample, pair), 'source']
    return os.path.join(base_dir, file_name)

configfile: 'star-paired.yml'

rule all:
    input:
        expand('output/{n_reads}/{sample}/insertions.txt',
               sample=get_samples(config['samples']), n_reads=[15, 25, 50, 70])

rule subsample:
    input: lambda wc: get_fastq_path(config['samples'], wc.sample, wc.pair)
    output: 'fastq_subsampled/{n_reads}/{sample}.{pair}.fastq.gz'
    params:
        n_reads=lambda wc: int(wc.n_reads) * 1000000,
        seed=100
    shell:
        'seqtk sample -s{params.seed} {input}'
        ' {params.n_reads} | gzip > {output}'

rule identify_insertions:
    input:
        fastq='fastq_subsampled/{n_reads}/{sample}.R1.fastq.gz',
        fastq2='fastq_subsampled/{n_reads}/{sample}.R2.fastq.gz'
    output:
        insertions='output/{n_reads}/{sample}/insertions.txt',
        alignment='output/{n_reads}/{sample}/alignment.bam'
    params:
        index=config['identify_insertions']['reference_index'],
        ref_gtf=config['identify_insertions']['reference_gtf'],
        tr_name=config['identify_insertions']['transposon_name'],
        tr_features=config['identify_insertions']['transposon_features'],
        options=config['identify_insertions']['options'] or '',
        output_dir='output/{n_reads}/{sample}'
    resources:
        memory=30
    threads: config['identify_insertions']['threads']
    log: 'output/{n_reads}/{sample}/logs/insertions.log'
    shell:
        'im-fusion insertions star'
        ' --fastq {input.fastq}'
        ' --fastq2 {input.fastq2}'
        ' --reference_index {params.index}'
        ' --reference_gtf {params.ref_gtf}'
        ' --transposon_name {params.tr_name}'
        ' --transposon_features {params.tr_features}'
        ' --output_dir {params.output_dir}'
        ' --star_threads {threads}'
        ' --assemble'
        ' {params.options} > {log} 2>&1'
